/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./002-dog-souls/app.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./002-dog-souls/Menus.js":
/*!********************************!*\
  !*** ./002-dog-souls/Menus.js ***!
  \********************************/
/*! exports provided: PlayingMenu, MainMenu, HighScoreMenu */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PlayingMenu\", function() { return PlayingMenu; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MainMenu\", function() { return MainMenu; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HighScoreMenu\", function() { return HighScoreMenu; });\n/* harmony import */ var _States__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./States */ \"./002-dog-souls/States.js\");\n\r\n\r\nclass PlayingMenu {\r\n    constructor(scene) {\r\n        this.scene = scene;\r\n        this.livesText = scene.add.text(10, 30, 'Lives: ');\r\n        this.scoreText = scene.add.text(10, 10, 'Score: ');\r\n        this.livesText.setOrigin(0, 0);\r\n        this.scoreText.setOrigin(0, 0);\r\n        this.livesText.setAlign('left');\r\n        this.scoreText.setAlign('left');\r\n        this.bigNG = scene.add.text(scene.screenWidth / 2, scene.screenHeight / 2);\r\n        this.bigNG.setVisible(false);\r\n        this.bigNG.depth = 1000;\r\n        this.bigNG.setStyle({\r\n            fontSize: '80px'\r\n        });\r\n        this.bigNG.setOrigin(.5);\r\n\r\n        this.bonusText = scene.add.text(scene.screenWidth * .5, 10, 'Bonus: ');\r\n        this.bonusText.setOrigin(.5, 0);\r\n        this.bonusText.setAlign('left');\r\n\r\n        this.levelText = scene.add.text(scene.screenWidth - 10, 10, 'Level: ');\r\n        this.ngText = scene.add.text(scene.screenWidth - 10, 30, 'NG: ');\r\n        this.levelText.setOrigin(1, 0);\r\n        this.ngText.setOrigin(1, 0);\r\n        this.levelText.setAlign('right');\r\n        this.ngText.setAlign('right');\r\n\r\n        this.hide();\r\n    }\r\n    ngFade() {\r\n        this.bigNG.setText('NG ' + this.scene.ng);\r\n        this.bigNG.setVisible(true);\r\n        this.scene.tweens.add({\r\n            scrollY: 0,\r\n            targets: this.ngText,\r\n            ease: 'Linear',\r\n            duration: 4000,\r\n            onComplete: function() {\r\n                this.bigNG.setVisible(false);\r\n            }.bind(this)\r\n        });\r\n    }\r\n    update() {\r\n        this.livesText.setText('Lives: ' + this.scene.lives);\r\n        this.scoreText.setText('Score: ' + this.scene.score);\r\n        this.levelText.setText('Level: ' + this.scene.level);\r\n        if (this.scene.ng > 0) {\r\n            this.ngText.setText('NG: ' + this.scene.ng);\r\n        } else {\r\n            this.ngText.setText('');\r\n        }\r\n        if (this.scene.state == _States__WEBPACK_IMPORTED_MODULE_0__[\"States\"].IS_PLAYING) {\r\n            this.bonusText.setText('Bonus: ' + this.scene.bonus);\r\n        } else {\r\n            this.bonusText.setText('');\r\n        }\r\n    }\r\n    show() {\r\n        this.livesText.setVisible(true);\r\n        this.scoreText.setVisible(true);\r\n        this.levelText.setVisible(true);\r\n        this.ngText.setVisible(true);\r\n        this.bonusText.setVisible(true);\r\n    }\r\n    hide() {\r\n        this.livesText.setVisible(false);\r\n        this.scoreText.setVisible(false);\r\n        this.levelText.setVisible(false);\r\n        this.ngText.setVisible(false);\r\n        this.bonusText.setVisible(false);\r\n    }\r\n}\r\n\r\nclass MainMenu {\r\n    constructor(scene) {\r\n        this.scene = scene;\r\n        this.titleText = scene.add.text(scene.screenWidth * .5, scene.screenHeight * .1, 'DOG SOULS', {\r\n            fontSize: '40px'\r\n        });\r\n        this.titleText.setOrigin(.5, 0);\r\n\r\n        this.instructionsText = scene.add.text(scene.screenWidth * .525, scene.screenHeight * .2);\r\n        this.instructionsText.setText(`You are a DOG.\\nReach the TOP to win.\\nAvoid HORSES.\\n\\nArrow keys or WASD to move.\\nHold SPACE or SHIFT to move slowly.\\n\\nPress SPACE to begin.`);\r\n        this.instructionsText.setOrigin(.5, 0);\r\n        this.instructionsText.setAlign('left');\r\n        this.instructionsText.setLineSpacing('5');\r\n        this.hide();\r\n    }\r\n\r\n    show() {\r\n        this.instructionsText.setVisible(true);\r\n        this.titleText.setVisible(true);\r\n    }\r\n    hide() {\r\n        this.instructionsText.setVisible(false);\r\n        this.titleText.setVisible(false);\r\n    }\r\n}\r\n\r\n\r\nclass HighScoreMenu {\r\n    constructor(scene) {\r\n        this.scene = scene;\r\n        this.highScoreStyle = {\r\n            fontSize: '20px'\r\n        };\r\n\r\n        this.gameOverText = scene.add.text(scene.screenWidth * .5, scene.screenHeight * .09, 'High Scores');\r\n        this.gameOverText.setOrigin(.5, 0);\r\n        this.gameOverText.setStyle({ fontSize: '35px' });\r\n        this.gameOverText.depth = -1;\r\n\r\n        this.highScoreNameText = scene.add.text(scene.screenWidth * .4, scene.screenHeight * .15);\r\n        this.highScoreNameText.setStyle(this.highScoreStyle);\r\n        this.highScoreNameText.setAlign('right');\r\n        this.highScoreNameText.setOrigin(.5, 0);\r\n        this.highScoreNameText.setLineSpacing(5);\r\n\r\n        this.userNameText = scene.add.text(scene.screenWidth * .4, scene.screenHeight * .82);\r\n        this.userNameText.setStyle(this.highScoreStyle);\r\n        this.userNameText.setAlign('right');\r\n        this.userNameText.setOrigin(.5, 0);\r\n\r\n        this.highScoreNumberText = scene.add.text(scene.screenWidth * .6, scene.screenHeight * .15);\r\n        this.highScoreNumberText.setStyle(this.highScoreStyle);\r\n        this.highScoreNumberText.setAlign('left');\r\n        this.highScoreNumberText.setOrigin(.5, 0);\r\n        this.highScoreNumberText.setLineSpacing(5);\r\n\r\n        this.userScoreText = scene.add.text(scene.screenWidth * .6, scene.screenHeight * .82);\r\n        this.userScoreText.setStyle(this.highScoreStyle);\r\n        this.userScoreText.setAlign('left');\r\n        this.userScoreText.setOrigin(.5, 0);\r\n\r\n        this.hide();\r\n    }\r\n\r\n    update() {\r\n        let highScoreNameStr = '';\r\n        let highScoreNumberStr = '';\r\n        highScoreNameStr += 'Name\\n';\r\n        highScoreNumberStr += 'Score\\n';\r\n        let highScores = this.scene.highScores;\r\n        for (let i = 0; i < highScores.length; ++i) {\r\n            let highScoreName = highScores[i].score_name;\r\n            let highScoreNumber = highScores[i].score_number;\r\n            highScoreNumberStr += highScoreNumber + '\\n';\r\n            highScoreNameStr += highScoreName + '\\n';\r\n        }\r\n        this.highScoreNumberText.setText(highScoreNumberStr);\r\n        this.highScoreNameText.setText(highScoreNameStr);\r\n        this.userScoreText.setText(this.scene.score);\r\n        this.userNameText.setText(this.scene.userName);\r\n    }\r\n\r\n    hide() {\r\n        this.gameOverText.setVisible(false);\r\n        this.highScoreNumberText.setVisible(false);\r\n        this.highScoreNameText.setVisible(false);\r\n        this.userScoreText.setVisible(false);\r\n        this.userNameText.setVisible(false);\r\n    }\r\n\r\n    show() {\r\n        this.gameOverText.setVisible(true);\r\n        this.highScoreNumberText.setVisible(true);\r\n        this.highScoreNameText.setVisible(true);\r\n        this.userScoreText.setVisible(true);\r\n        this.userNameText.setVisible(true);\r\n    }\r\n    \r\n}\r\n\r\n\r\n\n\n//# sourceURL=webpack:///./002-dog-souls/Menus.js?");

/***/ }),

/***/ "./002-dog-souls/States.js":
/*!*********************************!*\
  !*** ./002-dog-souls/States.js ***!
  \*********************************/
/*! exports provided: States */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"States\", function() { return States; });\nconst States = {\n    MAIN_MENU: 1,\n    IS_PLAYING: 2,\n    GAME_OVER: 3\n}\n\n\n//# sourceURL=webpack:///./002-dog-souls/States.js?");

/***/ }),

/***/ "./002-dog-souls/Tile.js":
/*!*******************************!*\
  !*** ./002-dog-souls/Tile.js ***!
  \*******************************/
/*! exports provided: tileSize, tileXOffset, tileYOffset, createTileGraphics, drawGrassOnRow, tilePosToCoords, coordsToTilePos */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"tileSize\", function() { return tileSize; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"tileXOffset\", function() { return tileXOffset; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"tileYOffset\", function() { return tileYOffset; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createTileGraphics\", function() { return createTileGraphics; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"drawGrassOnRow\", function() { return drawGrassOnRow; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"tilePosToCoords\", function() { return tilePosToCoords; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"coordsToTilePos\", function() { return coordsToTilePos; });\nfunction createTileGraphics(scene) {\r\n    let graphics = scene.add.graphics();\r\n    for (let i = 0; i < scene.tileXCount; ++i) {\r\n        for (let j = scene.tileYCount - 2; j > 0; --j) {\r\n            let tilePos = tilePosToCoords(i, j);\r\n            tilePos.x -= tileSize / 2;\r\n            tilePos.y -= tileSize / 2;\r\n            graphics.fillStyle('0x9b7653');\r\n            graphics.fillRect(tilePos.x, tilePos.y, tileSize, tileSize);\r\n        }\r\n    }\r\n    drawGrassOnRow(scene, graphics, 0);\r\n    drawGrassOnRow(scene, graphics, scene.tileYCount - 1);\r\n    graphics.depth = -100;\r\n    return graphics;\r\n}\r\n\r\nfunction drawGrassOnRow(scene, graphics, tileY) {\r\n    graphics.fillStyle('0x526F35');\r\n    for (let i = 0; i < scene.tileXCount; ++i) {\r\n        let tilePos = tilePosToCoords(i, tileY);\r\n        tilePos.x -= tileSize / 2;\r\n        tilePos.y -= tileSize / 2;\r\n        graphics.fillStyle('0x526F35');\r\n        graphics.fillRect(tilePos.x, tilePos.y, tileSize, tileSize);\r\n    }\r\n}\r\n\r\nfunction tilePosToCoords(tileX, tileY) {\r\n    return {\r\n        x: tileSize * Math.floor(tileX) + tileXOffset + tileSize / 2,\r\n        y: tileSize * Math.floor(tileY) + tileYOffset + tileSize / 2\r\n    };\r\n}\r\n\r\nfunction coordsToTilePos(x, y) {\r\n    return {\r\n        x: Math.floor((x - tileXOffset - (tileSize / 2)) / tileSize),\r\n        y: Math.floor((y - tileYOffset - (tileSize / 2)) / tileSize),\r\n    }\r\n}\r\n\r\nconst tileSize = 60;\r\nconst tileXOffset = 1;\r\nconst tileYOffset = 0;\r\n\r\n\r\n\n\n//# sourceURL=webpack:///./002-dog-souls/Tile.js?");

/***/ }),

/***/ "./002-dog-souls/Units.js":
/*!********************************!*\
  !*** ./002-dog-souls/Units.js ***!
  \********************************/
/*! exports provided: GridUnit, ControlledGridUnit, Doggo, Horsie, HorseSpawner */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GridUnit\", function() { return GridUnit; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ControlledGridUnit\", function() { return ControlledGridUnit; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Doggo\", function() { return Doggo; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Horsie\", function() { return Horsie; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HorseSpawner\", function() { return HorseSpawner; });\n/* harmony import */ var _Tile__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Tile */ \"./002-dog-souls/Tile.js\");\n\r\n\r\nclass GridUnit extends Phaser.GameObjects.Sprite {\r\n    constructor(scene, tileX, tileY, texture) {\r\n        super(scene, Object(_Tile__WEBPACK_IMPORTED_MODULE_0__[\"tilePosToCoords\"])(tileX, tileY).x, Object(_Tile__WEBPACK_IMPORTED_MODULE_0__[\"tilePosToCoords\"])(tileX, tileY).y, texture);\r\n        this.scene = scene;\r\n        this.scene.add.existing(this);\r\n        this.canMove = true;\r\n        this.moveCoolDown = 1;\r\n        this.moveTimer = 0;\r\n        this.targetTile = undefined;\r\n        this.currTile;\r\n        this.setTilePos(Math.floor(tileX), Math.floor(tileY));\r\n    }\r\n\r\n    setTargetTilePos(tileX, tileY) {\r\n        this.targetTile = {\r\n            x: tileX,\r\n            y: tileY\r\n        }\r\n    }\r\n\r\n    setTilePos(tileX, tileY) {\r\n        let tilePos = Object(_Tile__WEBPACK_IMPORTED_MODULE_0__[\"tilePosToCoords\"])(tileX, tileY);\r\n        this.setPosition(tilePos.x, tilePos.y);\r\n        this.currTile = {\r\n            x: Math.floor(tileX),\r\n            y: Math.floor(tileY)\r\n        }\r\n    }\r\n    \r\n    moveToTile(tileX, tileY) {\r\n        if (this.canMove) {\r\n            let signX = 0;\r\n            if (tileX - this.currTile.x < 0) signX = -1;\r\n            else if (tileX - this.currTile.x > 0) signX = 1;\r\n            let signY = 0;\r\n            if (tileY - this.currTile.y < 0) signY = -1;\r\n            else if (tileY - this.currTile.y > 0) signY = 1; \r\n            this.canMove = false;\r\n            this.moveTimer = this.scene.time.now + this.moveCoolDown;\r\n            this.setTargetTilePos(this.currTile.x + signX, this.currTile.y + signY);\r\n        }\r\n    }\r\n\r\n    setToTile(tileX, tileY) {\r\n        let tilePos = Object(_Tile__WEBPACK_IMPORTED_MODULE_0__[\"tilePosToCoords\"])(tileX, tileY);\r\n        this.setPosition(tilePos.x, tilePos.y)\r\n    }\r\n\r\n    allowMove() {\r\n        if (typeof this.targetTile != 'undefined') {\r\n            this.setTilePos(this.targetTile.x, this.targetTile.y);\r\n        }\r\n        this.targetTile = undefined;\r\n        this.canMove = true;\r\n    }\r\n\r\n    update(time, delta) {\r\n        if (!this.canMove) {\r\n            let timeRemaining = this.moveTimer - time;\r\n            if (timeRemaining <= 0) {\r\n                this.allowMove();\r\n            } else {\r\n                let vX = delta * _Tile__WEBPACK_IMPORTED_MODULE_0__[\"tileSize\"] * (this.targetTile.x - this.currTile.x) / (this.moveCoolDown);\r\n                let vY = delta * _Tile__WEBPACK_IMPORTED_MODULE_0__[\"tileSize\"] * (this.targetTile.y - this.currTile.y) / (this.moveCoolDown)\r\n                this.x += vX;\r\n                this.y += vY;\r\n            }\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nclass ControlledGridUnit extends GridUnit {\r\n    constructor(scene, tileX, tileY, texture) {\r\n        super(scene, tileX, tileY, texture);\r\n        this.moveCoolDown = 250;\r\n    }\r\n\r\n    moveUp() {\r\n        if (this.canMove) {\r\n            let tilePos = Object(_Tile__WEBPACK_IMPORTED_MODULE_0__[\"coordsToTilePos\"])(this.x, this.y);\r\n            if (tilePos.y > 0) {\r\n                this.moveToTile(tilePos.x, tilePos.y - 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    moveDown() {\r\n        if (this.canMove) {\r\n            let tilePos = Object(_Tile__WEBPACK_IMPORTED_MODULE_0__[\"coordsToTilePos\"])(this.x, this.y);\r\n            if (tilePos.y < this.scene.tileYCount - 1) {\r\n                this.moveToTile(tilePos.x, tilePos.y + 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    moveLeft() {\r\n        if (this.canMove) {\r\n            let tilePos = Object(_Tile__WEBPACK_IMPORTED_MODULE_0__[\"coordsToTilePos\"])(this.x, this.y);\r\n            if (tilePos.x > 0) {\r\n                this.moveToTile(tilePos.x - 1, tilePos.y);\r\n                this.flipX = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    moveRight() {\r\n        if (this.canMove) {\r\n            let tilePos = Object(_Tile__WEBPACK_IMPORTED_MODULE_0__[\"coordsToTilePos\"])(this.x, this.y);\r\n            if (tilePos.x < this.scene.tileXCount - 1) {\r\n                this.moveToTile(tilePos.x + 1, tilePos.y);\r\n                this.flipX = false;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nclass Doggo extends ControlledGridUnit {\r\n    constructor(scene, tileX, tileY) {\r\n        super(scene, tileX, tileY, 'doggo');\r\n        this.moveCoolDown = 150;\r\n    }\r\n}\r\n\r\nclass Horsie extends GridUnit {\r\n    constructor(scene, startTileX, startTileY, targetTileX, targetTileY, moveCoolDownPerTile) {\r\n        super(scene, startTileX, startTileY, 'horse1');\r\n        if (typeof moveCoolDownPerTile == 'undefined') {\r\n            moveCoolDownPerTile = 300;\r\n        }\r\n        this.moveCoolDown = moveCoolDownPerTile;\r\n        this.moveToTile(targetTileX, targetTileY);\r\n        this.finalTargetTile = {\r\n            x: targetTileX,\r\n            y: targetTileY\r\n        }\r\n    }\r\n\r\n    update(time, delta) {\r\n        super.update(time, delta);\r\n        if (typeof targetTile == 'undefined') {\r\n            if (this.currTile.x != this.finalTargetTile.x ||\r\n                this.currTile.y != this.finalTargetTile.y) {\r\n                this.moveToTile(this.finalTargetTile.x, this.finalTargetTile.y);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nclass HorseSpawner {\r\n    constructor(scene, y, horseCD, spawnMinCD, spawnMaxCD, startRight) {\r\n        this.spawning = false;\r\n        this.scene = scene;\r\n        this.y = y;\r\n        this.horseCD = horseCD;\r\n        this.spawnMinCD = spawnMinCD;\r\n        this.spawnMaxCD = spawnMaxCD;\r\n        this.startRight = startRight;\r\n        this.nextSpawnTime;\r\n    }\r\n    update(time, delta) {\r\n        if (!this.spawning) {\r\n            this.nextSpawnTime = time + Math.random() * (this.spawnMaxCD - this.spawnMinCD) + this.spawnMinCD;\r\n            this.spawning = true;\r\n        } else {\r\n            if (this.nextSpawnTime - time <= 0) {\r\n                let horse;\r\n                if (this.startRight) {\r\n                    horse = new Horsie(this.scene, -1, this.y, this.scene.tileXCount, this.y, this.horseCD);\r\n                } else {\r\n                    horse = new Horsie(this.scene, this.scene.tileXCount, this.y, -1, this.y, this.horseCD);\r\n                    horse.flipX = true;\r\n                }\r\n                this.scene.units.push(horse);\r\n                this.spawning = false;\r\n                // bad\r\n                this.scene.physics.add.existing(horse);\r\n                this.scene.physics.add.collider(this.scene.doggo, horse, this.scene.dogHorseCollide);\r\n            }\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        delete this;\r\n    }\r\n}\r\n\r\n\r\n\n\n//# sourceURL=webpack:///./002-dog-souls/Units.js?");

/***/ }),

/***/ "./002-dog-souls/app.js":
/*!******************************!*\
  !*** ./002-dog-souls/app.js ***!
  \******************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _keyboard__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./keyboard */ \"./002-dog-souls/keyboard.js\");\n/* harmony import */ var _Menus__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Menus */ \"./002-dog-souls/Menus.js\");\n/* harmony import */ var _Tile__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Tile */ \"./002-dog-souls/Tile.js\");\n/* harmony import */ var _Units__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Units */ \"./002-dog-souls/Units.js\");\n/* harmony import */ var _States__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./States */ \"./002-dog-souls/States.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nvar config = {\r\n    type: Phaser.AUTO,\r\n    width: 541,\r\n    height: 781,\r\n    pixelArt: true,\r\n    physics: {\r\n        default: 'arcade',\r\n        arcade: {\r\n            debug: false,\r\n        }\r\n    },\r\n    scene: {\r\n        preload: preload,\r\n        create: create,\r\n        update: update\r\n    }\r\n};\r\n\r\nvar devMode = false;\r\n\r\nconst carImages = ['horse1'];\r\n\r\nfunction preload() {\r\n    this.load.setBaseURL('');\r\n    this.load.image('doggo', 'assets/sprites/doggo.png');\r\n    for (let i = 0; i < carImages.length; ++i) {\r\n        this.load.image(carImages[i], 'assets/sprites/' + carImages[i] + '.png');\r\n    }\r\n}\r\n\r\nfunction gameOver(scene) {\r\n    for (let i = 0; i < scene.units.length; ++i) {\r\n        let unit = scene.units[i];\r\n        if (unit instanceof _Units__WEBPACK_IMPORTED_MODULE_3__[\"HorseSpawner\"]) {\r\n            scene.units.splice(scene.units.indexOf(unit), 1);\r\n            --i;\r\n            unit.destroy();\r\n        }\r\n    }\r\n    scene.doggo.destroy();\r\n    scene.state = _States__WEBPACK_IMPORTED_MODULE_4__[\"States\"].GAME_OVER;\r\n    scene.userName = '';\r\n    scene.highScoreMenu.show();\r\n}\r\n\r\nfunction reset(scene) {\r\n    // remove all units but our doggo\r\n    for (let i = 0; i < scene.units.length; ++i) {\r\n        let unit = scene.units[i];\r\n        scene.units.splice(scene.units.indexOf(unit), 1);\r\n        unit.destroy();\r\n        --i;\r\n    }\r\n}\r\n\r\nfunction create() {\r\n    // ajax request to get high scores\r\n    this.gameName = 'dog-souls';\r\n    this.highScores = [];\r\n    let scene = this;\r\n    this.fetchHighScores = function () {\r\n        let apiURL = 'http://localhost:5000/hs';\r\n        if (devMode == false) {\r\n            apiURL = 'https://stately-app.herokuapp.com/hs'\r\n        }\r\n        $.ajax({\r\n            url: apiURL,\r\n            type: 'GET',\r\n            data: {\r\n                gameName: scene.gameName,\r\n                count: 20\r\n            },\r\n            dataType: 'json'\r\n        }).done(function(data) {\r\n            scene.highScores = data;\r\n        });\r\n    };\r\n    this.fetchHighScores();\r\n    setInterval(function() {\r\n        scene.fetchHighScores()\r\n    }, 10000);\r\n\r\n    this.postHighScore = function (name, score) {\r\n        let apiURL = 'http://localhost:5000/hs';\r\n        if (devMode == false) {\r\n            apiURL = 'https://stately-app.herokuapp.com/hs'\r\n        }\r\n        $.ajax({\r\n            url: apiURL,\r\n            type: 'POST',\r\n            data: {\r\n                gameName: scene.gameName,\r\n                scoreName: name,\r\n                scoreNumber: score\r\n            },\r\n        }).done(function(data) {\r\n            scene.fetchHighScores();\r\n        });\r\n    };\r\n    \r\n    this.state = _States__WEBPACK_IMPORTED_MODULE_4__[\"States\"].MAIN_MENU;\r\n    this.screenWidth = config.width;\r\n    this.screenHeight = config.height;\r\n    this.score;\r\n    this.bonus;\r\n    this.bonusTimer;\r\n    this.lives;\r\n    this.gridG;\r\n    this.tileXCount = Math.floor(this.screenWidth / _Tile__WEBPACK_IMPORTED_MODULE_2__[\"tileSize\"]);\r\n    this.tileYCount = Math.floor(this.screenHeight / _Tile__WEBPACK_IMPORTED_MODULE_2__[\"tileSize\"]);\r\n    \r\n    Object(_keyboard__WEBPACK_IMPORTED_MODULE_0__[\"setKeySchemes\"])(this);\r\n    \r\n    this.userName;\r\n    this.maxNameLength = 6;\r\n\r\n    this.units = [];\r\n    this.dogHorseCollide = () => {\r\n        --this.lives;\r\n        placeDogInSpawn(this);\r\n        if (this.lives <= 0) {\r\n            gameOver(this);\r\n        }\r\n    };\r\n    this.playingMenu = new _Menus__WEBPACK_IMPORTED_MODULE_1__[\"PlayingMenu\"](this);\r\n    this.highScoreMenu = new _Menus__WEBPACK_IMPORTED_MODULE_1__[\"HighScoreMenu\"](this);\r\n    this.mainMenu = new _Menus__WEBPACK_IMPORTED_MODULE_1__[\"MainMenu\"](this);\r\n\r\n    toMainMenu(this);\r\n}\r\n\r\nfunction update(time, delta) {\r\n    if (this.state == _States__WEBPACK_IMPORTED_MODULE_4__[\"States\"].MAIN_MENU) {\r\n        if (Object(_keyboard__WEBPACK_IMPORTED_MODULE_0__[\"startGameCheck\"])(this)) {\r\n            toPlayGame(this);\r\n        }\r\n    } else if (this.state == _States__WEBPACK_IMPORTED_MODULE_4__[\"States\"].IS_PLAYING) {\r\n        Object(_keyboard__WEBPACK_IMPORTED_MODULE_0__[\"keyboardCheck\"])(this);\r\n\r\n        this.playingMenu.update();\r\n\r\n        updateBonusTimer(this, time)\r\n        updateUnits(this, time, delta);\r\n\r\n        checkWin(this);\r\n    } else if (this.state == _States__WEBPACK_IMPORTED_MODULE_4__[\"States\"].GAME_OVER) {\r\n        this.playingMenu.update();\r\n        this.highScoreMenu.update();\r\n\r\n        if (Object(_keyboard__WEBPACK_IMPORTED_MODULE_0__[\"userNameInputCheck\"])(this)) {\r\n            toMainMenu(this);\r\n        }\r\n        updateUnits(this, time, delta);\r\n    } else {\r\n        console.error('ERROR: Unknown game state: ' + this.state);\r\n    }\r\n}\r\n\r\nfunction updateUnits(scene, time, delta) {\r\n    for (let i = 0; i < scene.units.length; ++i) {\r\n        let unit = scene.units[i];\r\n        unit.update(time, delta);\r\n        if (unit instanceof _Units__WEBPACK_IMPORTED_MODULE_3__[\"Horsie\"]) {\r\n            if (typeof unit.finalTargetTile == 'undefined') {\r\n                unit.destroy();\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction updateBonusTimer(scene, time) {\r\n    if (scene.bonus > 0) {\r\n        if (scene.bonusTimer - time <= 0) {\r\n            scene.bonusTimer = time + 1000;\r\n            --scene.bonus;\r\n        }\r\n    }\r\n}\r\n\r\nfunction toMainMenu(scene) {\r\n    reset(scene);\r\n    scene.state = _States__WEBPACK_IMPORTED_MODULE_4__[\"States\"].MAIN_MENU;\r\n    scene.gridG = Object(_Tile__WEBPACK_IMPORTED_MODULE_2__[\"createTileGraphics\"])(scene);\r\n    scene.playingMenu.hide();\r\n    scene.highScoreMenu.hide();\r\n    scene.mainMenu.show();\r\n}\r\n\r\nfunction toPlayGame(scene) {\r\n    scene.mainMenu.hide()\r\n    scene.playingMenu.show();\r\n    scene.state = _States__WEBPACK_IMPORTED_MODULE_4__[\"States\"].IS_PLAYING;\r\n    initGame(scene);\r\n}\r\n\r\nfunction initGame(scene) {\r\n    scene.doggo = new _Units__WEBPACK_IMPORTED_MODULE_3__[\"Doggo\"](scene);\r\n    scene.physics.add.existing(scene.doggo);\r\n    scene.score = 0;\r\n    scene.bonusTimer = 0;\r\n    scene.level = 1;\r\n    scene.lives = 3;\r\n    scene.ng = 0;\r\n    scene.units.push(scene.doggo);\r\n    initLevel(scene);\r\n}\r\n\r\nfunction initLevel(scene) {\r\n    let level = scene.level;\r\n    let ng = scene.ng;\r\n    scene.bonus = 100 * (scene.ng + 1) + 1;\r\n    let lastY = scene.tileYCount - 1;\r\n    placeDogInSpawn(scene);\r\n    \r\n    let horseIndex = 0;\r\n    let safeRowEvery = 2 + ng;\r\n    scene.gridG = Object(_Tile__WEBPACK_IMPORTED_MODULE_2__[\"createTileGraphics\"])(scene);\r\n    \r\n    let yRank = lastY - 1;\r\n    for (; yRank > 0; --yRank) {\r\n        if (++horseIndex % (safeRowEvery + 1) == 0) {\r\n            Object(_Tile__WEBPACK_IMPORTED_MODULE_2__[\"drawGrassOnRow\"])(scene, scene.gridG, yRank);\r\n            continue;\r\n        }\r\n\r\n        let startRight = Math.random() < .5 ? true : false;\r\n        let minCD = 400;\r\n        let maxCD = 800;\r\n        let horseMoveCD = Math.random() * (maxCD - minCD) + minCD;\r\n\r\n        let minSpawnCD = Math.max(3000 - level * 200 - ng * 350, 1000);\r\n        let maxSpawnCD = minSpawnCD * 1.5;\r\n        let horseSpawner = new _Units__WEBPACK_IMPORTED_MODULE_3__[\"HorseSpawner\"](scene, yRank, horseMoveCD, minSpawnCD, maxSpawnCD, startRight);\r\n        scene.units.push(horseSpawner);\r\n        for (let i = -1; i < scene.tileXCount; ++i) {\r\n            let targetTileX = startRight ? scene.tileXCount : -1;\r\n            let startTileX = startRight ? i : scene.tileXCount - 1 - i;\r\n            let hose = new _Units__WEBPACK_IMPORTED_MODULE_3__[\"Horsie\"](scene, startTileX, yRank, targetTileX, yRank, horseMoveCD);\r\n            scene.physics.add.existing(hose);\r\n            scene.physics.add.collider(scene.doggo, hose, scene.dogHorseCollide);\r\n            scene.units.push(hose);\r\n            if (!startRight) hose.flipX = true;\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nfunction nextLevel(scene) {\r\n    // remove all units but our doggo\r\n    for (let i = 0; i < scene.units.length; ++i) {\r\n        let unit = scene.units[i];\r\n        if (!(unit instanceof _Units__WEBPACK_IMPORTED_MODULE_3__[\"Doggo\"])) {\r\n            scene.units.splice(scene.units.indexOf(unit), 1);\r\n            unit.destroy();\r\n            --i;\r\n        }\r\n    }\r\n\r\n    if (scene.level / 5 >= 1) {\r\n        scene.level = 1;\r\n        ++scene.ng;\r\n        ++scene.lives;\r\n        scene.playingMenu.ngFade();\r\n    } else {\r\n        ++scene.level;\r\n    }\r\n    initLevel(scene);\r\n}\r\n\r\nfunction checkWin(scene) {\r\n    if (scene.doggo.currTile.y == 0) {\r\n        scene.score += 100 * (scene.ng + 1) + scene.bonus;\r\n        nextLevel(scene);\r\n    }\r\n}\r\n\r\nfunction placeDogInSpawn(scene) {\r\n    let middleX = scene.tileXCount / 2;\r\n    let lastY = scene.tileYCount - 1;\r\n    scene.doggo.setTilePos(middleX, lastY);\r\n    scene.doggo.setTargetTilePos(middleX, lastY);\r\n    scene.doggo.canMove = true;\r\n}\r\n\r\nvar game = new Phaser.Game(config);\n\n//# sourceURL=webpack:///./002-dog-souls/app.js?");

/***/ }),

/***/ "./002-dog-souls/keyboard.js":
/*!***********************************!*\
  !*** ./002-dog-souls/keyboard.js ***!
  \***********************************/
/*! exports provided: keyboardCheck, startGameCheck, setKeySchemes, userNameInputCheck, userNameCharArray, userNameCharCSV */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"keyboardCheck\", function() { return keyboardCheck; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"startGameCheck\", function() { return startGameCheck; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setKeySchemes\", function() { return setKeySchemes; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"userNameInputCheck\", function() { return userNameInputCheck; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"userNameCharArray\", function() { return userNameCharArray; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"userNameCharCSV\", function() { return userNameCharCSV; });\nconst userNameCharArray = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];\r\nconst userNameCharCSV = 'A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z';\r\n\r\nfunction userNameInputCheck(scene) {\r\n    let enterPressed = false;\r\n    let backspacePressed = false;\r\n    let keyPressed;\r\n    for (let i = 0; i < userNameCharArray.length; ++i) {\r\n        let key = userNameCharArray[i];\r\n        if (Phaser.Input.Keyboard.JustDown(scene.userNameScheme[key])) {\r\n            keyPressed = key;\r\n        }\r\n    }\r\n    if (Phaser.Input.Keyboard.JustDown(scene.userNameScheme.enter)) enterPressed = true;\r\n    if (Phaser.Input.Keyboard.JustDown(scene.userNameScheme.backspace)) backspacePressed = true;\r\n\r\n    if (enterPressed) {\r\n        tryPostScore(scene);\r\n        return true;\r\n    } else if (backspacePressed) {\r\n        if (scene.userName.length > 0) {\r\n            scene.userName = scene.userName.substring(0, scene.userName.length - 1);\r\n        }\r\n    } else if (typeof keyPressed != 'undefined') {\r\n        if (scene.userName.length < scene.maxNameLength) {\r\n            scene.userName += keyPressed;\r\n        }\r\n    }\r\n}\r\n\r\n// posts score if reaches requirements\r\nfunction tryPostScore(scene) {\r\n    if (scene.userName.length > 0 && scene.score >= 2000) {\r\n        scene.postHighScore(scene.userName, scene.score);\r\n    }\r\n}\r\n\r\nfunction setKeySchemes(scene) {\r\n    scene.wasd = {\r\n        up: scene.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.W),\r\n        down: scene.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.S),\r\n        left: scene.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.A),\r\n        right: scene.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.D),\r\n        slow: scene.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.SHIFT),\r\n        start: scene.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.SPACE)\r\n    }\r\n    scene.cursors = scene.input.keyboard.createCursorKeys();\r\n    scene.cursors.slow = scene.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.SPACE);\r\n    scene.cursors.start = scene.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.SPACE);\r\n    scene.keySchemes = [scene.cursors, scene.wasd];\r\n\r\n    scene.userNameScheme = scene.input.keyboard.addKeys(userNameCharCSV);\r\n    scene.userNameScheme.backspace = scene.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.BACKSPACE);\r\n    scene.userNameScheme.enter = scene.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.ENTER);\r\n}\r\n\r\nfunction startGameCheck(scene) {\r\n    let startPressed = false;\r\n    for (let i = 0; i < scene.keySchemes.length; ++i) {\r\n        let scheme = scene.keySchemes[i];\r\n        if (Phaser.Input.Keyboard.JustDown(scheme.start)) {\r\n            startPressed = true;\r\n        }\r\n    }\r\n    if (startPressed) {\r\n        return true;\r\n    }\r\n}\r\n\r\nfunction keyboardCheck(scene) {\r\n    let upPressed = false;\r\n    let downPressed = false;\r\n    let leftPressed = false;\r\n    let rightPressed = false;\r\n    let slowPressed = false;\r\n    for (let i = 0; i < scene.keySchemes.length; ++i) {\r\n        let scheme = scene.keySchemes[i];\r\n        if (Phaser.Input.Keyboard.JustDown(scheme.up)) {\r\n            upPressed = true;\r\n        }\r\n        if (Phaser.Input.Keyboard.JustDown(scheme.down)) {\r\n            downPressed = true;\r\n        }\r\n        if (Phaser.Input.Keyboard.JustDown(scheme.left)) {\r\n            leftPressed = true;\r\n        }\r\n        if (Phaser.Input.Keyboard.JustDown(scheme.right)) {\r\n            rightPressed = true;\r\n        }\r\n        if (scheme.slow.isDown) {\r\n            slowPressed = true;\r\n        }\r\n    }\r\n\r\n    if (slowPressed) {\r\n        if (scene.doggo.canMove) {\r\n            scene.doggo.moveCoolDown = 400;\r\n        }\r\n    } else {\r\n        if (scene.doggo.canMove) {\r\n            scene.doggo.moveCoolDown = 200;\r\n        }\r\n    }\r\n\r\n    if (upPressed && !downPressed) {\r\n        scene.doggo.moveUp();\r\n    } else if (downPressed && !upPressed) {\r\n        scene.doggo.moveDown();\r\n    } else if (leftPressed && !rightPressed) {\r\n        scene.doggo.moveLeft();\r\n    } else if (rightPressed && !leftPressed) {\r\n        scene.doggo.moveRight();\r\n    }\r\n}\r\n\r\n\r\n\r\n\n\n//# sourceURL=webpack:///./002-dog-souls/keyboard.js?");

/***/ })

/******/ });